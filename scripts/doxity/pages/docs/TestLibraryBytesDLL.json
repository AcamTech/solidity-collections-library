{"fileName":"/contracts/TestLibraryBytesDLL.sol","name":"TestLibraryBytesDLL","abi":[{"constant":true,"inputs":[{"name":"_item","type":"bytes32"}],"name":"test_find","outputs":[{"name":"_item_index","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_current_item","type":"bytes32"}],"name":"test_previous_item","outputs":[{"name":"_previous_item","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"test_total","outputs":[{"name":"_total_count","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_item","type":"bytes32"}],"name":"test_remove_item","outputs":[{"name":"_success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"test_check_count","outputs":[{"name":"_count","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"test_check_last_index","outputs":[{"name":"_last_index","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_index","type":"uint256"}],"name":"test_remove","outputs":[{"name":"_success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_current_index","type":"uint256"}],"name":"test_previous","outputs":[{"name":"_previous_index","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"test_start","outputs":[{"name":"_start_index","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_item","type":"bytes32"}],"name":"test_valid_item","outputs":[{"name":"_yes","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_data","type":"bytes32"}],"name":"test_append","outputs":[{"name":"_success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"test_start_item","outputs":[{"name":"_item","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_current_index","type":"uint256"}],"name":"test_next","outputs":[{"name":"_next_index","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"setup_reset_data","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"test_check_collection_count","outputs":[{"name":"_count","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"setup_data_for_testing","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_current_item","type":"bytes32"}],"name":"test_next_item","outputs":[{"name":"_next_item","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"test_end_item","outputs":[{"name":"_item","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_item_index","type":"uint256"}],"name":"test_item_next_index","outputs":[{"name":"_next_index","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_item_index","type":"uint256"}],"name":"test_valid","outputs":[{"name":"_yes","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"test_check_first_index","outputs":[{"name":"_first_index","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_item_index","type":"uint256"}],"name":"test_item_previous_index","outputs":[{"name":"_previous_index","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"test_end","outputs":[{"name":"_end_index","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_item_index","type":"uint256"}],"name":"test_get","outputs":[{"name":"_item","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"test","outputs":[{"name":"_results","type":"uint256[16]"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_string","type":"bytes32"}],"name":"TestLog","type":"event"}],"source":"pragma solidity ^0.4.14;\n\nimport './lib/LibraryDLL.sol';\n\ncontract TestLibraryBytesDLL {\n  event TestLog(bytes32 _string);\n\n  LibraryDLL.BytesDLL testData;\n\n  function setup_reset_data () {\n    delete testData.data;\n  }\n\n  function setup_data_for_testing ()\n  {\n      delete testData.data;\n      testData.data.collection.push(LibraryDLL.Item('test1',0,2));\n      testData.data.collection.push(LibraryDLL.Item('test2',1,3));\n      testData.data.collection.push(LibraryDLL.Item('test3',2,4));\n      testData.data.collection.push(LibraryDLL.Item('test4',3,5));\n      testData.data.collection.push(LibraryDLL.Item('test5',4,6));\n      testData.data.collection.push(LibraryDLL.Item('test6',5,0));\n      testData.data.item_index['test1'] = 1;\n      testData.data.item_index['test2'] = 2;\n      testData.data.item_index['test3'] = 3;\n      testData.data.item_index['test4'] = 4;\n      testData.data.item_index['test5'] = 5;\n      testData.data.item_index['test6'] = 6;\n      testData.data.first_index = 1;\n      testData.data.last_index = 6;\n      testData.data.count = 6;\n  }\n  function test_check_collection_count () returns (uint256 _count) {\n    _count = testData.data.collection.length;\n  }\n\n  function test_check_first_index () returns (uint256 _first_index) {\n    _first_index = testData.data.first_index;\n  }\n\n  function test_check_last_index () returns (uint256 _last_index) {\n    _last_index = testData.data.last_index;\n  }\n\n  function test_check_count () returns (uint256 _count) {\n    _count = testData.data.count;\n  }\n\n  function test_item_previous_index (uint256 _item_index) returns (uint256 _previous_index) {\n    _previous_index = testData.data.collection[_item_index-1].previous_index;\n  }\n\n  function test_item_next_index (uint256 _item_index) returns (uint256 _next_index) {\n    _next_index = testData.data.collection[_item_index-1].next_index;\n  }\n\n  function test_find(bytes32 _item)\n           public\n           constant\n           returns (uint256 _item_index)\n  {\n    _item_index = LibraryDLL.find(testData, _item);\n  }\n\n  function test_get(uint256 _item_index)\n           returns (bytes32 _item)\n  {\n    _item = LibraryDLL.get(testData, _item_index);\n  }\n\n  function test_append(bytes32 _data)\n           returns (bool _success)\n  {\n    _success = LibraryDLL.append(testData, _data);\n  }\n\n  function test_remove(uint256 _index)\n           returns (bool _success)\n  {\n    _success = LibraryDLL.remove(testData, _index);\n  }\n\n  function test_remove_item(bytes32 _item)\n           returns (bool _success)\n  {\n    _success = LibraryDLL.remove_item(testData, _item);\n  }\n\n  function test_total ()\n           returns (uint256 _total_count)\n  {\n    _total_count = LibraryDLL.total(testData);\n  }\n\n  function test_start ()\n           returns (uint256 _start_index)\n  {\n    _start_index = LibraryDLL.start(testData);\n  }\n\n  function test_start_item ()\n           returns (bytes32 _item)\n  {\n    _item = LibraryDLL.start_item(testData);\n  }\n\n  function test_end ()\n           returns (uint256 _end_index)\n  {\n    _end_index = LibraryDLL.end(testData);\n  }\n\n  function test_end_item ()\n           returns (bytes32 _item)\n  {\n    _item = LibraryDLL.end_item(testData);\n  }\n\n  function test_valid(uint256 _item_index)\n           returns (bool _yes)\n  {\n    _yes = LibraryDLL.valid(testData, _item_index);\n  }\n\n  function test_valid_item(bytes32 _item)\n           returns (bool _yes)\n  {\n    _yes = LibraryDLL.valid_item(testData, _item);\n  }\n\n  function test_previous(uint256 _current_index)\n           returns (uint256 _previous_index)\n  {\n    _previous_index = LibraryDLL.previous(testData, _current_index);\n  }\n\n  function test_previous_item(bytes32 _current_item)\n           returns (bytes32 _previous_item)\n  {\n    _previous_item = LibraryDLL.previous_item(testData, _current_item);\n  }\n\n  function test_next(uint256 _current_index)\n           returns (uint256 _next_index)\n  {\n    _next_index = LibraryDLL.next(testData, _current_index);\n  }\n\n  function test_next_item(bytes32 _current_item)\n           returns (bytes32 _next_item)\n  {\n    _next_item = LibraryDLL.next_item(testData, _current_item);\n  }\n\n  function test() returns (uint256[16] _results){\n      setup_data_for_testing();\n      delete testData.data.collection[2];\n      _results[0] = testData.data.collection[0].previous_index;\n      _results[1] = testData.data.collection[0].next_index;\n      _results[2] = testData.data.collection[1].previous_index;\n      _results[3] = testData.data.collection[1].next_index;\n      _results[4] = testData.data.collection[2].previous_index;\n      _results[5] = testData.data.collection[2].next_index;\n      _results[6] = testData.data.collection[3].previous_index;\n      _results[7] = testData.data.collection[3].next_index;\n      _results[8] = testData.data.collection[4].previous_index;\n      _results[9] = testData.data.collection[4].next_index;\n      _results[10] = testData.data.collection[5].previous_index;\n      _results[11] = testData.data.collection[5].next_index;\n\n      _results[12] = 1000000;\n      _results[13] = testData.data.first_index;\n      _results[14] = testData.data.last_index;\n      _results[15] = testData.data.count;\n\n      //_results[8] = testData.data.count;\n      //_results[9] = testData.data.collection.length;\n\n      /*delete testData;*/\n      /*_results[10] = testData.data.item_index['test1'];\n      _results[11] = testData.data.item_index['test2'];\n      _results[12] = testData.data.item_index['test3'];*/\n\n      /*_results[11] = testData.data.first_index;\n      _results[12] = testData.data.last_index;\n      */\n\n\n      TestLog(\"test123\");\n  }\n}\n","abiDocs":[{"constant":true,"inputs":[{"name":"_item","type":"bytes32"}],"name":"test_find","outputs":[{"name":"_item_index","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"test_find(bytes32)","signatureHash":"00d635f7"},{"constant":false,"inputs":[{"name":"_current_item","type":"bytes32"}],"name":"test_previous_item","outputs":[{"name":"_previous_item","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_previous_item(bytes32)","signatureHash":"019c8e1e"},{"constant":false,"inputs":[],"name":"test_total","outputs":[{"name":"_total_count","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_total()","signatureHash":"06a3220e"},{"constant":false,"inputs":[{"name":"_item","type":"bytes32"}],"name":"test_remove_item","outputs":[{"name":"_success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_remove_item(bytes32)","signatureHash":"1189bd44"},{"constant":false,"inputs":[],"name":"test_check_count","outputs":[{"name":"_count","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_check_count()","signatureHash":"17f26cda"},{"constant":false,"inputs":[],"name":"test_check_last_index","outputs":[{"name":"_last_index","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_check_last_index()","signatureHash":"229270ff"},{"constant":false,"inputs":[{"name":"_index","type":"uint256"}],"name":"test_remove","outputs":[{"name":"_success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_remove(uint256)","signatureHash":"2686d224"},{"constant":false,"inputs":[{"name":"_current_index","type":"uint256"}],"name":"test_previous","outputs":[{"name":"_previous_index","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_previous(uint256)","signatureHash":"3eed8f50"},{"constant":false,"inputs":[],"name":"test_start","outputs":[{"name":"_start_index","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_start()","signatureHash":"4d85c29a"},{"constant":false,"inputs":[{"name":"_item","type":"bytes32"}],"name":"test_valid_item","outputs":[{"name":"_yes","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_valid_item(bytes32)","signatureHash":"56f0f7b7"},{"constant":false,"inputs":[{"name":"_data","type":"bytes32"}],"name":"test_append","outputs":[{"name":"_success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_append(bytes32)","signatureHash":"5b66906e"},{"constant":false,"inputs":[],"name":"test_start_item","outputs":[{"name":"_item","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_start_item()","signatureHash":"6442a1c1"},{"constant":false,"inputs":[{"name":"_current_index","type":"uint256"}],"name":"test_next","outputs":[{"name":"_next_index","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_next(uint256)","signatureHash":"6df14521"},{"constant":false,"inputs":[],"name":"setup_reset_data","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"setup_reset_data()","signatureHash":"735dc8fb"},{"constant":false,"inputs":[],"name":"test_check_collection_count","outputs":[{"name":"_count","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_check_collection_count()","signatureHash":"7775d1df"},{"constant":false,"inputs":[],"name":"setup_data_for_testing","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"setup_data_for_testing()","signatureHash":"7fb90070"},{"constant":false,"inputs":[{"name":"_current_item","type":"bytes32"}],"name":"test_next_item","outputs":[{"name":"_next_item","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_next_item(bytes32)","signatureHash":"b9507dea"},{"constant":false,"inputs":[],"name":"test_end_item","outputs":[{"name":"_item","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_end_item()","signatureHash":"bdb35622"},{"constant":false,"inputs":[{"name":"_item_index","type":"uint256"}],"name":"test_item_next_index","outputs":[{"name":"_next_index","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_item_next_index(uint256)","signatureHash":"c6142b38"},{"constant":false,"inputs":[{"name":"_item_index","type":"uint256"}],"name":"test_valid","outputs":[{"name":"_yes","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_valid(uint256)","signatureHash":"cad6f270"},{"constant":false,"inputs":[],"name":"test_check_first_index","outputs":[{"name":"_first_index","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_check_first_index()","signatureHash":"eeba652b"},{"constant":false,"inputs":[{"name":"_item_index","type":"uint256"}],"name":"test_item_previous_index","outputs":[{"name":"_previous_index","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_item_previous_index(uint256)","signatureHash":"f26ef7e1"},{"constant":false,"inputs":[],"name":"test_end","outputs":[{"name":"_end_index","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_end()","signatureHash":"f3bedbdd"},{"constant":false,"inputs":[{"name":"_item_index","type":"uint256"}],"name":"test_get","outputs":[{"name":"_item","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test_get(uint256)","signatureHash":"f5350782"},{"constant":false,"inputs":[],"name":"test","outputs":[{"name":"_results","type":"uint256[16]"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"test()","signatureHash":"f8a8fd6d"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_string","type":"bytes32"}],"name":"TestLog","type":"event","signature":"TestLog(bytes32)","signatureHash":"86baa66b"}]}
